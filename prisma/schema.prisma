// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid()) // ID gerado automaticamente
  name          String
  email         String    @unique // Email único
  password      String
  role          Role      @default(USER) // Papel do usuário com valor padrão USER
  createdAt     DateTime  @default(now()) // Data de criação
  updatedAt     DateTime  @updatedAt // Data de atualização automática
  messages      Message[]
  sales         Sale[]    @relation("buyer")
  salesAsAgent  Sale[]    @relation("agent")
}

model Vehicle {
  id            Int       @id @default(autoincrement()) // ID autoincrementado
  title         String
  description   String?   @db.Text
  year          Int
  price         Float
  mileage       Int
  fuel          String
  transmission  String
  color         String
  doors         Int
  features      String[]
  images        String[]
  featured      Boolean   @default(false)
  status        Status    @default(AVAILABLE)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  sales         Sale[]
}

model Message {
  id            String    @id @default(cuid()) // ID gerado automaticamente
  name          String
  email         String
  phone         String?
  subject       String?
  message       String    @db.Text
  read          Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  userId        String?
  user          User?     @relation(fields: [userId], references: [id])
}

model Sale {
  id            String    @id @default(cuid()) // ID gerado automaticamente
  price         Float
  date          DateTime  @default(now())
  status        SaleStatus @default(PENDING)
  notes         String?   @db.Text
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  vehicleId     Int
  vehicle       Vehicle   @relation(fields: [vehicleId], references: [id])
  buyerId       String
  buyer         User      @relation("buyer", fields: [buyerId], references: [id])
  agentId       String
  agent         User      @relation("agent", fields: [agentId], references: [id])
}

enum Role {
  USER
  AGENT
  ADMIN
}

enum Status {
  AVAILABLE
  RESERVED
  SOLD
}

enum SaleStatus {
  PENDING
  PROCESSING
  COMPLETED
  CANCELLED
}